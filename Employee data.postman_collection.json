{
	"info": {
		"_postman_id": "474e1bb2-b8df-48c1-bdf4-37b2f4250232",
		"name": "Employee data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44665956"
	},
	"item": [
		{
			"name": "GetRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 200\", () =>{\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Susccessful GET request\", () =>{\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"}); \r",
							"\r",
							"pm.test(\"Content-Type header is present\", () =>{\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () =>{\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Length header is 2766\", () =>{\r",
							"  pm.expect(pm.response.headers.get('Content-Length')).to.eql('2766');\r",
							"});\r",
							"\r",
							"pm.test(\"Cookie 'language' is present\", () =>{\r",
							" pm.expect(pm.cookies.has('language')).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", () =>{\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test Data type of the response\", () =>{\r",
							"  pm.expect(jsonData).to.be.an(\"array\");\r",
							"  pm.expect(jsonData[0].name).to.be.a(\"string\");\r",
							"});\r",
							"pm.test(\"Each employee object has all the required properties\", () => {\r",
							"  const jsonData = pm.response.json();\r",
							"  jsonData.forEach((employee) => {\r",
							"    pm.expect(employee).to.have.property('id').that.is.a('string');\r",
							"    pm.expect(employee).to.have.property('name').that.is.a('string');\r",
							"    pm.expect(employee).to.have.property('location').that.is.a('string');\r",
							"    pm.expect(employee).to.have.property('phone').that.is.a('string');\r",
							"    pm.expect(employee).to.have.property('designation').that.is.a('string');\r",
							"    pm.expect(employee).to.have.property('skills').that.is.an('array');\r",
							"  });\r",
							"});\r",
							"// Validating JSON fields in response\r",
							"pm.test(\"values of  fields in response\"),() => {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
							"    pm.expect(jsonData.location).to.eql(\"india\");\r",
							"    pm.expect(jsonData.phone[0]).to.eql(\"8008224084\");\r",
							"    pm.expect(jsonData.designation[0]).to.eql(\"tester\");\r",
							"    pm.expect(jsonData.skills).to.eql(\"JIRA\");\r",
							"}\r",
							"//JSON schema validation\r",
							"var schema={\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"skills\",\r",
							"        \"id\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"currency\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"language\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"currency\",\r",
							"        \"language\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"currency\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"language\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"currency\",\r",
							"        \"language\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"currency\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"language\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"currency\",\r",
							"        \"language\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"currency\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"language\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"currency\",\r",
							"        \"language\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"currency\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"language\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"currency\",\r",
							"        \"language\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"location\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"phone\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"designation\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"currency\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"language\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"location\",\r",
							"        \"phone\",\r",
							"        \"designation\",\r",
							"        \"currency\",\r",
							"        \"language\",\r",
							"        \"skills\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"pm.test('schema is valid', () =>{\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Getrequestemployee1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\"status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Susccessful GET request\", function () {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"}); \r",
							"\r",
							"pm.test(\"Content-Type header is present\", function () {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Length header is 152\", function () {\r",
							"  pm.expect(pm.response.headers.get('Content-Length')).to.eql('152');\r",
							"});\r",
							"\r",
							"pm.test(\"Cookie 'language' is present\", function () {\r",
							" pm.expect(pm.cookies.has('language')).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test Data type of the response\", function () {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.name).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Each employee object has all the required properties\", function () {\r",
							"  pm.expect(jsonData).to.have.property('id').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('name').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('location').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('phone').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('designation').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('skills').that.is.an('array');\r",
							"});\r",
							"\r",
							"// Validating JSON fields in response\r",
							"pm.test(\"values of  fields in response\", function () {\r",
							"    pm.expect(jsonData.location).to.eql(\"india\");\r",
							"    pm.expect(jsonData.designation).to.eql(\"tester\");\r",
							"    pm.expect(jsonData.skills[0]).to.eql(\"JIRA\");\r",
							"});\r",
							"\r",
							"//JSON schema validation\r",
							"var schema={\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"location\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"phone\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"designation\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"skills\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"name\",\r",
							"    \"location\",\r",
							"    \"phone\",\r",
							"    \"designation\",\r",
							"    \"skills\"\r",
							"  ]\r",
							"}\r",
							"pm.test('schema is valid', () =>{\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/employees/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employees",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\"status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Susccessful GET request\", function () {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"}); \r",
							"\r",
							"pm.test(\"Content-Type header is present\", function () {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Length header is 202\", function () {\r",
							"  pm.expect(pm.response.headers.get('Content-Length')).to.eql('202');\r",
							"});\r",
							"\r",
							"pm.test(\"Cookie 'language' is present\", function () {\r",
							" pm.expect(pm.cookies.has('language')).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test Data type of the response\", function () {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.name).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Each employee object has all the required properties\", function () {\r",
							"  pm.expect(jsonData).to.have.property('id').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('name').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('location').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('phone').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('designation').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('skills').that.is.an('array');\r",
							"});\r",
							"\r",
							"// Validating JSON fields in response\r",
							"pm.test(\"values of  fields in response\", function () {\r",
							"    pm.expect(jsonData.location).to.eql(\"india\");\r",
							"    pm.expect(jsonData.designation).to.eql(\"analyst\");\r",
							"    pm.expect(jsonData.skills[0]).to.eql(\"JIRA\");\r",
							"});\r",
							"\r",
							"//JSON schema validation\r",
							"var schema={\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"location\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"phone\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"designation\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"skills\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"name\",\r",
							"    \"location\",\r",
							"    \"phone\",\r",
							"    \"designation\",\r",
							"    \"skills\"\r",
							"  ]\r",
							"}\r",
							"pm.test('schema is valid', () =>{\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"test\",\r\n    \"location\": \"india\",\r\n    \"phone\": \"9009009911\",\r\n    \"designation\": \"analyst\",\r\n    \"currency\": \"INR\",\r\n    \"language\": \"english\",\r\n    \"skills\": [\r\n\t   \"JIRA\",\r\n       \"HP ALM\"\r\n    ]\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\"status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Susccessful GET request\", function () {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"}); \r",
							"\r",
							"pm.test(\"Content-Type header is present\", function () {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Length header is 150\", function () {\r",
							"  pm.expect(pm.response.headers.get('Content-Length')).to.eql('150');\r",
							"});\r",
							"\r",
							"pm.test(\"Cookie 'language' is present\", function () {\r",
							" pm.expect(pm.cookies.has('language')).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test Data type of the response\", function () {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.name).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Each employee object has all the required properties\", function () {\r",
							"  pm.expect(jsonData).to.have.property('id').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('name').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('location').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('phone').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('designation').that.is.a('string');\r",
							"  pm.expect(jsonData).to.have.property('skills').that.is.an('array');\r",
							"});\r",
							"\r",
							"// Validating JSON fields in response\r",
							"pm.test(\"values of  fields in response\", function () {\r",
							"    pm.expect(jsonData.location).to.eql(\"india\");\r",
							"    pm.expect(jsonData.designation).to.eql(\"tester\");\r",
							"    pm.expect(jsonData.skills[0]).to.eql(\"UAT\");\r",
							"});\r",
							"\r",
							"//JSON schema validation\r",
							"var schema={\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"location\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"phone\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"designation\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"skills\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"name\",\r",
							"    \"location\",\r",
							"    \"phone\",\r",
							"    \"designation\",\r",
							"    \"skills\"\r",
							"  ]\r",
							"}\r",
							"pm.test('schema is valid', () =>{\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"venkat\",\r\n    \"location\": \"india\",\r\n    \"phone\": \"8008224084\",\r\n    \"designation\": \"tester\",\r\n    \"skills\": [\r\n        \"UAT\",\r\n        \"SIT\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/employees/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employees",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deleterequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.text();\r",
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\", function () {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is text/plain; charset=utf-8\", function () {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/plain; charset=utf-8');\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Length header is 9\", function () {\r",
							"  pm.expect(pm.response.headers.get('Content-Length')).to.eql('9');\r",
							"});\r",
							"\r",
							"pm.test(\"Cookie 'language' is not present\", function () {\r",
							" pm.expect(pm.cookies.has('language')).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/employees/ca87",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employees",
						"ca87"
					]
				}
			},
			"response": []
		}
	]
}